function matRad_create_VMC_input(VMC_options, filepath)
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% matRad vmc++ inputfile creation
%
% call
%   matRad_create_VMC_input(VMC_options, filepath)
%
% input
%   VMC_options:     structure set with VMC options
%   filepath:        path where input file is created (this has to be the 
%                    runs path in the vmc++ folder)
%
%
% References
%   
%
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Copyright 2015, Mark Bangert, on behalf of the matRad development team
%
% m.bangert@dkfz.de
%
% This file is part of matRad.
%
% matrad is free software: you can redistribute it and/or modify it under
% the terms of the GNU General Public License as published by the Free
% Software Foundation, either version 3 of the License, or (at your option)
% any later version.
%
% matRad is distributed in the hope that it will be useful, but WITHOUT ANY
% WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
% FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
% details.
%
% You should have received a copy of the GNU General Public License in the
% file license.txt along with matRad. If not, see
% <http://www.gnu.org/licenses/>.
%
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%check for monoenergy option
if ~isempty(VMC_options.beamlet_source.mono_energy) && VMC_options.beamlet_source.mono_energy>0
    monoEnergyLine = ['      mono energy = ' num2str(VMC_options.beamlet_source.mono_energy)];
else
    monoEnergyLine = [];
end 

VMC_Input = {...
    ['  :start beamlet source:      '                                                                                    ]   ,...%1 source
    ['      my name = ' VMC_options.beamlet_source.my_name                                                               ]   ,...
    ['      monitor units ' VMC_options.beamlet_source.my_name ' = ' num2str(VMC_options.beamlet_source.monitor_units)   ]   ,...
    monoEnergyLine,...
    ['      spectrum = ' VMC_options.beamlet_source.spectrum                                                             ]   ,...
    ['      charge       = ' num2str(VMC_options.beamlet_source.charge)                                                  ]   ,...
    ['      beamlet edges = ' num2str(VMC_options.beamlet_source.beamlet_edges, '%8.5f ')                                ]   ,...
    ['      virtual point source position = ' num2str(VMC_options.beamlet_source.virtual_point_source_position, '%8.5f ')]   ,...
    ['  :stop beamlet source:       '                                                                                    ]   ,...
    ['                              '                                                                                    ]   ,...
    ['  :start MC Parameter:        '                                           ]   ,...%2 transport parameter
    ['      automatic parameter = ' VMC_options.MC_parameter.automatic_parameter]   ,...
    ['  :stop MC Parameter:         '                                           ]   ,...
    ['                              '                                           ]   ,...
    ['  :start MC Control:          '                              ]   ,...%3 MC control
    ['      ncase  = ' num2str(VMC_options.MC_control.ncase)       ]   ,...
    ['      nbatch = ' num2str(VMC_options.MC_control.nbatch)      ]   ,...
    ['      rng seeds = ' num2str(VMC_options.MC_control.rng_seeds)]   ,...
    ['  :stop MC Control:           '                              ]   ,...
    ['                              '                              ]   ,...
    ['  :start variance reduction:  '                                                          ]   ,...%4 variance reduction
    ['      repeat history   = ' num2str(VMC_options.variance_reduction.repeat_history)        ]   ,...
    ['      split photons = ' num2str(VMC_options.variance_reduction.split_photons)            ]   ,...
    ['      photon split factor = ' num2str(VMC_options.variance_reduction.photon_split_factor)]   ,...
    ['  :stop variance reduction: '                                                            ]   ,...
    ['                              '                                                          ]   ,...
    ['  :start quasi:  '                                      ]   ,...%5 quasi random numbers
    ['      base      = ' num2str(VMC_options.quasi.base)     ]   ,...
    ['      dimension = ' num2str(VMC_options.quasi.dimension)]   ,...
    ['      skip      = ' num2str(VMC_options.quasi.skip)     ]   ,...
    ['  :stop quasi:    '                                     ]   ,...
    ['                              '                         ]   ,...
    ['  :start geometry:            '                                                ]   ,...%6 geometry
    ['      :start XYZ geometry:    '                                                ]   ,...
    ['          my name = ' VMC_options.geometry.XYZ_geometry.CT                ]   ,...
    ['          method of input = ' VMC_options.geometry.XYZ_geometry.method_of_input]   ,...
    ['          phantom file    = ' VMC_options.geometry.XYZ_geometry.CT_file   ]   ,...
    ['      :stop XYZ geometry:     '                                                ]   ,...
    ['  :stop geometry:             '                                                ]   ,...
    ['                              '                                                ]   ,...
    ['  :start scoring options:'                                                                               ]   ,...%7 scoring manager
    ['      start in geometry: ' VMC_options.scoring_options.start_in_geometry                                 ]   ,...
    ['      :start dose options:  '                                                                            ]   ,...
    ['          score in geometries: ' VMC_options.scoring_options.dose_options.score_in_geometries            ]   ,...
    ['          score dose to water: ' VMC_options.scoring_options.dose_options.score_dose_to_water            ]   ,...
    ['      :stop dose options:     '                                                                          ]   ,...
    ['      :start output options ' VMC_options.scoring_options.output_options.name ':'                        ]   ,...
    ['          dump dose:  ' num2str(VMC_options.scoring_options.output_options.dump_dose)                    ]   ,...
    ['      :stop output options ' VMC_options.scoring_options.output_options.name  ':'                        ]   ,...
    ['  :stop scoring options:      '                                                                          ]
    };

%write input file
fid = fopen(filepath,'wt');
for i = 1 : length(VMC_Input)
  fprintf(fid,'%s\n',VMC_Input{i});
end
fclose(fid);

end